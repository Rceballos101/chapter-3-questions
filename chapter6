'''
#notes
prev = 7
while prev <= 37:
    if 37 - prev < 7:
        print(prev)
    prev += 7
print(prev)


lst = [3, 1, -7, -4, 9, -2]

for i in lst:
    if i < 0:
        print(lst.index(i))
        break

def fibonacci(bound):
    'returns the smallest Fibonacci number greater than bound'
    previous = 1	        # previous Fibonacci number
    current = 1	        # current Fibonacci number
    while current <= bound:
        # current becomes previous, and new current is computed
        previous, current = current, previous+current
    return current
fibonacci(100)

name = input('What is your name? ')
print('Hello {}'.format(name))
while name != 'quit':
    name = input('What is your name? ')
    if name == '':
        continue
    print('Hello {}'.format(name))
'''
grocery = ['bread', 'milk', 'butter']
for item in enumerate(grocery):  
    print(item)

print('\n')

for count, item in enumerate(grocery): 
    print(count, item)


fam = {1:'rey',2:'alb',3:'sal',4:'reina'}
fam[5] = 'mom'
print(fam)

#6.1
def birthState(name):
    
    pres = {'Barack Hussein Obama II':'Hawaii',
            'George Walker Bush':'Connecticut',
            'William Jefferson Clinton':'Arkansas',
            'George Herbert Walker Bush':'Massachussetts',
            'Ronald Wilson Reagan':'Illinois',
            'James Earl Carter, Jr':'Georgia'}

    print(pres[name])

birthState('Ronald Wilson Reagan')

#6.2
def rlookup(phone):

    rphonebook = {'(123)456-78-90':['Anna','Karenina'],
                  '(901)234-56-78':['Yu', 'Tsun'],
                  '(321)908-76-54':['Hans', 'Castorp']}
    if phone in rphonebook:
        print(rphonebook[phone])
    else:
        print('The number you entered is not in use.')

rlookup('(123)456-78-90')
rlookup('(453)454-55-00')

#6.3
def freq(student):
    
    count = {}
    for name in student:
        if name in count:
            count[name] += 1
        else:
            count[name] = 1
    
    print(count)
        
freq(['Cindy', 'John', 'Cindy', 'Adam', 'Adam',
      'Jimmy', 'Joan', 'Cindy', 'Joan'])
      
#6.4
def wordcount(phrase):
    count = {}
    phrase = phrase.split()
    for i in phrase:
        if i in count:
            count[i] += 1
        else:
            count[i] = 1
            
    print(count)
    
wordcount('all animals are equal but some \ animals are more equal than others')

#6.5
def lookup():
    phonebook = {('Anna','Karenina'):'(123)456-78-90',
                 ('Yu', 'Tsun'):'(901)234-56-78',
                 ('Hans', 'Castorp'):'(321)908-76-54'}
        key1 = input('Enter first name: ')
        key2 = input('Enter last name: ')
    
    print(phonebook[key1,key2])

lookup()

#6.7
def encoding(x):
    print('Char Decimal Hex Binary')
    for i in x:
        code = ord(i)
        
        print(' {} {:5} {:5x} {:7b}'.format(x,code,code,code))
        

encoding('dad')

#6.8
def char(low,high):
    for i in range(low,high+1):
        print('{} : {}'.format(i,chr(i)))
    
char(62,67)

#6.9
def guesss(x):
    import random
    ans = random.randrange(x)
    print(ans)

    guess = eval(input('Enter your guess '))
    
    while guess != ans:

        if guess > ans:
            print('Too high')
        elif guess < ans:
            print('Too low')
            
        guess = eval(input('Enter your guess '))
        
    print('You got it!')
    
guesss(100)

#6.10
def approxPi(n):
    import random

    k = 0
    for i in range(n):
        x = random.uniform(-1,1)
        y = random.uniform(-1,1)
        if x**2 + y**2 <= 1:
            k += 1
    print(4*k/n)
    
approxPi(100000)

#6.11
def easyCrypto(x):
    alpha = '0abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'
    for i in x:
        ind = alpha.find(i)#index
        if ind % 2 != 0:
            print(alpha[ind+1],end='')#if odd
        else:
            print(alpha[ind-1],end='')#if even
    print()
    
easyCrypto('abc')
easyCrypto('ZOO')

#6.12
def letter2number(grade):
    gpa = {'A':4.0,'B':3.0,'C':2.0,'D':1.0,'F':0}
    if len(grade) == 1:
        print(gpa[grade[0]])
    else:
        if grade[1] =='+':
            print(gpa[grade[0]]+.3)
        elif grade[1] == '-':
            print(gpa[grade[0]]-.3)
    
letter2number('A-')
letter2number('B+')
letter2number('D')

#6.13 adn 6.14
 
agencies = {'CCC':'Civilian Conservation Corps','FCC':'Federal Communications Commission','FDIC':'Federal Deposit Insurance Corporation','SSB':'Social Security Board','WPA':'Works Progress Administration'}

name = agencies.keys()
for i in name:
    print(agencies[i])

agencies['SEC'] = 'Securities and Exchange Commission'
agencies['SSB'] = 'Social Security Administration'
agencies.pop('CCC')
agencies.pop('WPA')
print('\n',agencies,'\n')

for i in name:
    print(agencies[i])

#6.15
def lookup():
    phonebook = {('Anna','Karenina'):['(123)456-78-90'],
                 ('Yu', 'Tsun'):['(901)234-56-78'],
                 ('Hans', 'Castorp'):['(321)908-76-54']}
    key1 = input('Enter first name: ')
    key2 = input('Enter last name: ')
    
    print(phonebook[key1,key2])

lookup()

