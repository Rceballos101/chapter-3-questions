
#5.3
def arith(x):
    for i in range(1,len(x)):
        if x[i] != x[i-1] + 3:
            return False
    return True
arith([3, 6, 9, 12, 15])

#5.4
'''
def factorial(x):
    fact = 1
    for i in range(x,1,-1):
        fact *= i
    print(fact)
factorial(5)

#5.5
def acronym():
    acro = 'Random access memory'
    acro = acro.split(' ')
    acronym = ''
    for i in acro:
        acronym = acronym + i[0]
    print(acronym.upper())
acronym()

#5.6
def divisors(x):
    divi = []
    for i in range(1,x+1):
        if x % i == 0:
            divi.append(i)
    print(divi)
divisors(11)

#5.7
def mult(x,y):
    mult = []
    for i in x:
        for j in y:
            m = i * j
            mult.append(m)
    print(mult)
mult([3, 4, 1], [2, 0])
'''
#5.8
lst = [3, 1, 7, 4, 9, 2, 5]

def bubblesort(lst):
    for i in range(len(lst)-1,):
        for j in range(i):
            if lst[j] > lst[j+1]:
                lst[j],lst[j+1] = lst[j+1],lst[j]
                print(lst)
    print(lst)
bubblesort(lst)

[1, 2, 3, 4, 5, 7, 9]

#notes
t = [[4, 7, 2, 5], [5, 1, 9, 2], [8, 3, 6, 6]]

nrows = len(t)
ncols = len(t[0])
for i in range(nrows):
    for j in range(ncols):
        t[i][j] += 1
for a in t:
    for b in a:
        print(b,end=" ")
    print()

#5.9
t = [[4, 7, 2, 5], [5, 1, 9, 2], [8, 3, 6, 6]]
s = [[0, 1, 2, 0], [0, 1, 1, 1], [0, 1, 0, 0]]
            
for i in range(len(t)):
    for j in range(len(t[i])):
        t[i][j] += s[i][j]
for i in t:
        print(i)
        
#notes
mult = 0
lst = [1]
while mult <= 3951:
    mult += 73
    #print(mult,end=' ') 
    lst.append(mult)
print(lst[-2])      

#5.10
investment = 500
interest = .07
years = 0
while investment < 1000:
    compound_interest = investment*interest
    investment += compound_interest
    years += 1
print(investment) 
print(years)       

#notes
prev = 1
curr = 1 
while curr <= 1000:
    prev, curr = curr, prev+curr
print(curr)

fib = [1,1]
while fib[-1] < 1000:
    add = fib[-1] + fib[-2]
    fib.append(add)
print(fib)

#5.11 idk
#never ends
lst = []
city = input('Enter a city ')
while city != '':
    lst.append(city)
    city = input('Enter a city ')

print(lst)
#5.12
def test(x):
    if x < 0:
        print('Negative')
    elif x > 0:
        print('Positive')
    else:
        print('Zero')
test(3)
 #5.14
mult = ([3, 1, 6, 2, 3, 9, 7, 9, 5, 4, 5])
for i in mult:
    if i % 3 == 0:
        print(i)

#5.15
vow = 'Hello WORLD'
vowels = 'aeiouAEIOU'
for i in range(len(vow)):
    if vow[i] in vowels:
        print(i)
#5.16

index = 'mississippi'
lst = []
for i in range(len(index)):
    if index[i] == 'a':
        lst.append(i)
print(lst)
#5.17
doubles = ([3, 0, 1, 2, 3, 6, 2, 4, 5, 6, 5])
for i in range(1,len(doubles)):
    if doubles[i-1] * 2 == doubles[i]:
        print(doubles[i])

#5.18
four = (['dog', 'letter', 'stop', 'door', 'bus', 'dust'])
words = []
for i in four:
    if len(i) == 4:
        words.append(i)
print(words)

#5.19
inBoth = ([3, 2, 5, 4, 7], [9, 0, 1, 3])
for i in inBoth[0]:
    if i in inBoth[1]:
        print(True)

#5.20
inBoth = ([3, 5, 1, 7, 9], [4, 2, 6, 3, 9])
lst = []
for i in inBoth[0]:
    if i in inBoth[1]:
        lst.append(i)
print(lst)

#5.21
pair = ([2, 3, 4], [5, 7, 9, 12], 9)
for i in pair[0]:
    for j in pair[1]:
        if i + j == pair[2]:
            print(i,j)

#5.22
pairSum = ([7, 8, 5, 3, 4, 6], 11)
lst = []
for i in range(len(pairSum[0])):
    for j in range(len(pairSum[0])):
        if pairSum[0][i] + pairSum[0][j] == pairSum[1]:        
            print(i,j)
'''
#5.23
def pay(wage,hours):
    if hours < 40:
        print('$',hours * wage)
    elif hours > 40 and hours <= 60:
        print('$',40 * wage + (hours - 40) * 1.5*wage)
    elif hours > 60:
        print('$',40 * wage + 20*1.5*wage + (hours - 60) * 2*wage )
pay(10,61)
'''#2.24
case = 'android'
if case[0] == case[0].upper():
    print('capitalized')
elif case[0] == case[0].lower():
    print('not capitalized')
else:
    print('unknown')

#2.25
leap = 1700
if leap % 4 == 0 and (leap % 100 != 0 or leap % 400 == 0):
    print('leap year')
else:
    print('not leap year')
    
#2.26
print(' Rock, paper, scissors say shoot ')
player1 = input('Player 1, please enter your selection ')
player2 = input('Player 2, please enter your selection ')

if player1 == player2:
    print('its a tie')
    
elif player1 == 'rock': 
    if player2 == 'paper':
        print('player2 wins')
    else:
        print('player1 wins')
        
elif player1 == 'paper': 
    if player2 == 'scissors':
        print('player2 wins')
    else: 
        print('player1 wins')
        
elif player1 == 'scissors': 
    if player2 == 'rock':
        print('player2 wins')
    else: 
        print('player1 wins')

else:
    print('learn to play the game bozo ')

#2.27
letter = ('ABCDF')
grade = (4, 3, 2, 1, 0)

GPA = 'F'
x = letter.find(GPA[0])
if len(GPA) > 1:
    if GPA[1] == '-':
        print(grade[x] -.3)
    elif GPA[1] == '+':
        print(grade[x] + .3)
else:
    print(grade[x])
'''
#2.28
def metric(geometric):
    geo = geometric[1] / geometric[0]
    for i in range(1,len(geometric)):
        if geo != geometric[i]/geometric[i-1]:
            return False
    return True
#metric([2, 4, 8, 16, 32, 64, 128, 256])
#metric([2, 4, 6, 8])

#5.29
def lastfirst(names):
    first = []
    last = []
    for i in names:
        name = i.split(', ')
        first.append(name[1])
        last.append(name[0])
    ans = [first,last]
    print(ans)
#lastfirst(['Gerber, Len', 'Fox, Kate', 'Dunn, Bob'])

'''
#5.30
#need test file

#5.31
def subsetSum(set,target):
    ans = 'nope'

    for i in range(len(set)):
        for j in range(1,len(set)):
            for k in range(2,len(set)):
                if ans == 'nope':
                    if set[i] + set[j] + set[k] == target:
                        print('True',set[i],set[j],set[k])
                        ans = 'found'

#subsetSum([5, 4, 10, 20, 15, 19],38)
#subsetSum([5, 4, 10, 20, 15, 19], 10)
#idk

#5.32
def fib(num):
    fib = [1,1]
    for i in range(2,num):
        new = fib[-1] + fib[-2]
        fib.append(new)
    print(fib[-1])
#fib(0)
#fib(4)
#fib(8)

#5.33
def mystery(num):
    div = [num]
    count = 0
    while div[-1] != 1:
        div.append(div[-1] // 2)
        count += 1
    print(count)
#mystery(4)
#mystery(11)
#mystery(25)

#5.34
def statement(transaction):
    deposits = []
    withdrawals = []
    for i in transaction:
        if i > 0:
            deposits.append(i)
        else:
            withdrawals.append(i)
    print('{},{}'.format(sum(deposits),sum(withdrawals)))
statement([30.95, -15.67, 45.56, -55.00, 43.78])

#5.35
def pixels(l):
    count = 0
    for i in l:
        for j in i:
            if j > 0:
                count += 1
    print(count)
pixels([[0, 156, 0, 0], [34, 0, 0, 0], [23, 123, 0, 34]])
pixels([[123, 56, 255], [34, 0, 0], [23, 123, 0], [3, 0, 0]])

#5.36
#prime can't be divided by #'s other than 2 or itself
def prime(n):
    p = 0
    if n == 2:
        print(True)
    else:
        while p == 0:
            for i in range(2,n):
                if n % i == 0:#not prime
                    p += 1
                    print(False)
                    break
            if p == 0:
                print(True)
                p += 1


prime(2)
prime(17)#prime
prime(21)#not prime
'''
#5.37
def mssl(lst):
    curr = best = 0
    for x in lst:
        curr = max(curr + x,0)     
        best = max(best,curr)
    print(best)
        
mssl([4, -2, -8, 5, -2, 7, 7, 2, -6, 5])
#mssl([3,4,5])
#mssl([-2,-3,-5])
'''
#5.38
def collatz(num):
    collatz = num
    
    while collatz != 1:
        print(collatz)        
        if collatz % 2 == 0:#even
            collatz = collatz / 2
        elif collatz % 2 != 0:#odd
            collatz = collatz * 3 + 1

collatz(10)
#5.39
def exclamation(excite):
    excite = excite.replace(excite,excite+'!')
    vowels = ('aeiou')
    new = []
    for x in excite:
        new.append(x)
        for i in vowels:
            if x == i:
                new.append(x*3)
    new = ''.join(new)
    print(new)
exclamation('argh')
exclamation('hello')
